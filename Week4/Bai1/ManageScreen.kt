package com.example.uthlibrary.screens

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.unit.dp
import com.example.uthlibrary.data.Book
import com.example.uthlibrary.data.Student

@Composable
fun ManageScreen() {
    val students = remember {
        mutableStateListOf(
            Student(1, "Nguyá»…n VÄƒn A", mutableListOf(Book(1, "Láº­p trÃ¬nh Kotlin", true))),
            Student(2, "Tráº§n Thá»‹ B", mutableListOf(Book(2, "Cáº¥u trÃºc dá»¯ liá»‡u", true), Book(3, "Máº¡ng mÃ¡y tÃ­nh", true))),
            Student(3, "LÃª VÄƒn C", mutableListOf())
        )
    }

    var searchName by remember { mutableStateOf("") }
    val selectedStudent = students.find { it.name.equals(searchName, ignoreCase = true) }

    Column(modifier = Modifier.padding(16.dp)) {
        Text("ðŸ“š Há»‡ thá»‘ng Quáº£n lÃ½ ThÆ° viá»‡n", style = MaterialTheme.typography.titleLarge)
        Spacer(Modifier.height(12.dp))

        OutlinedTextField(
            value = searchName,
            onValueChange = { searchName = it },
            label = { Text("Nháº­p tÃªn sinh viÃªn") },
            modifier = Modifier.fillMaxWidth()
        )

        Spacer(Modifier.height(12.dp))

        if (selectedStudent == null) {
            Text("KhÃ´ng tÃ¬m tháº¥y sinh viÃªn hoáº·c chÆ°a nháº­p tÃªn.")
        } else if (selectedStudent.borrowedBooks.isEmpty()) {
            Text("Sinh viÃªn nÃ y chÆ°a mÆ°á»£n quyá»ƒn sÃ¡ch nÃ o.")
        } else {
            Text("Danh sÃ¡ch sÃ¡ch Ä‘Ã£ mÆ°á»£n:", style = MaterialTheme.typography.titleMedium)
            LazyColumn {
                items(selectedStudent.borrowedBooks) { book ->
                    Card(modifier = Modifier
                        .fillMaxWidth()
                        .padding(vertical = 4.dp)) {
                        Row(modifier = Modifier.padding(12.dp)) {
                            Checkbox(checked = true, onCheckedChange = null)
                            Spacer(Modifier.width(8.dp))
                            Text(book.title)
                        }
                    }
                }
            }
        }
    }
}
